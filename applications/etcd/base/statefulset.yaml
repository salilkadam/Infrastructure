apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: etcd
  namespace: etcd
  labels:
    app.kubernetes.io/name: etcd
    app.kubernetes.io/instance: etcd
spec:
  serviceName: etcd-headless
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: etcd
      app.kubernetes.io/instance: etcd
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: etcd
        app.kubernetes.io/instance: etcd
    spec:
      serviceAccountName: etcd
      containers:
        - name: etcd
          image: docker.io/bitnami/etcd:3.6.2-debian-12-r0
          imagePullPolicy: IfNotPresent
          env:
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: MY_STS_NAME
              value: etcd
            - name: ETCD_NAME
              value: "$(MY_POD_NAME)"
            - name: ETCD_DATA_DIR
              value: /bitnami/etcd/data
            - name: ETCD_LOG_LEVEL
              value: info
            - name: ALLOW_NONE_AUTHENTICATION
              value: "no"
            - name: ETCD_ROOT_PASSWORD_FILE
              value: /opt/bitnami/etcd/secrets/etcd-root-password
            - name: ETCD_ON_K8S
              value: "yes"
            - name: ETCD_START_FROM_SNAPSHOT
              value: "no"
            - name: ETCD_DISASTER_RECOVERY
              value: "no"
            # - name: ETCD_AUTH_TOKEN
            #   value: "jwt,priv-key=/opt/bitnami/etcd/certs/token/jwt-token.pem,sign-method=RS256,ttl=10m"
            # TLS Configuration
            - name: ETCD_CLIENT_CERT_AUTH
              value: "true"
            - name: ETCD_PEER_CLIENT_CERT_AUTH
              value: "true"
            - name: ETCD_CERT_FILE
              value: "/opt/bitnami/etcd/certs/tls.crt"
            - name: ETCD_KEY_FILE
              value: "/opt/bitnami/etcd/certs/tls.key"
            - name: ETCD_TRUSTED_CA_FILE
              value: "/opt/bitnami/etcd/certs/ca.crt"
            - name: ETCD_PEER_CERT_FILE
              value: "/opt/bitnami/etcd/certs/tls.crt"
            - name: ETCD_PEER_KEY_FILE
              value: "/opt/bitnami/etcd/certs/tls.key"
            - name: ETCD_PEER_TRUSTED_CA_FILE
              value: "/opt/bitnami/etcd/certs/ca.crt"
            # Client URLs with TLS
            - name: ETCD_ADVERTISE_CLIENT_URLS
              value: "https://$(MY_POD_NAME).etcd-headless.etcd.svc.cluster.local:2379,https://etcd.etcd.svc.cluster.local:2379"
            - name: ETCD_LISTEN_CLIENT_URLS
              value: "https://0.0.0.0:2379"
            # Peer URLs with TLS
            - name: ETCD_INITIAL_ADVERTISE_PEER_URLS
              value: "https://$(MY_POD_NAME).etcd-headless.etcd.svc.cluster.local:2380"
            - name: ETCD_LISTEN_PEER_URLS
              value: "https://0.0.0.0:2380"
            - name: ETCD_INITIAL_CLUSTER_TOKEN
              value: etcd-cluster-k8s
            - name: ETCD_INITIAL_CLUSTER
              value: "etcd-0=https://etcd-0.etcd-headless.etcd.svc.cluster.local:2380,etcd-1=https://etcd-1.etcd-headless.etcd.svc.cluster.local:2380,etcd-2=https://etcd-2.etcd-headless.etcd.svc.cluster.local:2380"
            - name: ETCD_CLUSTER_DOMAIN
              value: etcd-headless.etcd.svc.cluster.local
          ports:
            - containerPort: 2379
              name: client
            - containerPort: 2380
              name: peer
          livenessProbe:
            httpGet:
              path: /livez
              port: 2379
              scheme: HTTPS
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
          readinessProbe:
            exec:
              command:
                - /opt/bitnami/scripts/etcd/healthcheck.sh
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
          resources:
            requests:
              cpu: 250m
              memory: 256Mi
              ephemeral-storage: 50Mi
            limits:
              cpu: 375m
              memory: 384Mi
              ephemeral-storage: 2Gi
          securityContext:
            allowPrivilegeEscalation: false
            runAsUser: 1001
            runAsGroup: 1001
            runAsNonRoot: true
            readOnlyRootFilesystem: true
            capabilities:
              drop: ["ALL"]
            privileged: false
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - name: data
              mountPath: /bitnami/etcd
            - name: etcd-secrets
              mountPath: /opt/bitnami/etcd/secrets
            - name: etcd-tls
              mountPath: /opt/bitnami/etcd/certs
              readOnly: true
            - name: etcd-jwt-token
              mountPath: /opt/bitnami/etcd/certs/token
              readOnly: true
            - name: tmp
              mountPath: /tmp
      securityContext:
        fsGroup: 1001
        fsGroupChangePolicy: Always
      terminationGracePeriodSeconds: 30
      volumes:
        - name: etcd-secrets
          secret:
            secretName: etcd
        - name: etcd-tls
          secret:
            secretName: etcd-tls
        - name: etcd-jwt-token
          secret:
            secretName: etcd-jwt-token
            defaultMode: 0400
        - name: tmp
          emptyDir: {}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 8Gi
        storageClassName: nfs-client 