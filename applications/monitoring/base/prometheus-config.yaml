apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: monitoring
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s

    rule_files:
      - "milvus_rules.yml"

    scrape_configs:
      # Milvus metrics
      - job_name: 'milvus'
        static_configs:
          - targets: 
            - 'milvus-proxy.milvus.svc.cluster.local:9091'
            - 'milvus-data-coordinator.milvus.svc.cluster.local:9091'
            - 'milvus-index-coordinator.milvus.svc.cluster.local:9091'
            - 'milvus-query-coordinator.milvus.svc.cluster.local:9091'
            - 'milvus-root-coordinator.milvus.svc.cluster.local:9091'
        metrics_path: /metrics
        scrape_interval: 10s

      # MinIO metrics
      - job_name: 'minio'
        static_configs:
          - targets: ['minio-api.minio.svc.cluster.local:9000']
        metrics_path: /minio/v2/metrics/cluster
        scrape_interval: 30s

      # etcd metrics
      - job_name: 'etcd'
        static_configs:
          - targets: 
            - 'etcd-0.etcd-headless.etcd.svc.cluster.local:2379'
            - 'etcd-1.etcd-headless.etcd.svc.cluster.local:2379'
            - 'etcd-2.etcd-headless.etcd.svc.cluster.local:2379'
            - 'etcd-3.etcd-headless.etcd.svc.cluster.local:2379'
            - 'etcd-4.etcd-headless.etcd.svc.cluster.local:2379'
        metrics_path: /metrics
        scrape_interval: 30s

      # Pulsar metrics
      - job_name: 'pulsar'
        static_configs:
          - targets: ['pulsar-service.pulsar.svc.cluster.local:8080']
        metrics_path: /metrics
        scrape_interval: 30s

      # Kubernetes metrics
      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__

  milvus_rules.yml: |
    groups:
      - name: milvus
        rules:
          # High memory usage alert
          - alert: MilvusHighMemoryUsage
            expr: container_memory_usage_bytes{container=~"milvus.*"} / container_spec_memory_limit_bytes{container=~"milvus.*"} > 0.8
            for: 5m
            labels:
              severity: warning
            annotations:
              summary: "Milvus high memory usage"
              description: "{{ $labels.container }} memory usage is {{ $value | humanizePercentage }}"

          # High CPU usage alert
          - alert: MilvusHighCPUUsage
            expr: rate(container_cpu_usage_seconds_total{container=~"milvus.*"}[5m]) / container_spec_cpu_quota{container=~"milvus.*"} * 100 > 80
            for: 5m
            labels:
              severity: warning
            annotations:
              summary: "Milvus high CPU usage"
              description: "{{ $labels.container }} CPU usage is {{ $value }}%"

          # Query latency alert
          - alert: MilvusHighQueryLatency
            expr: milvus_query_latency_seconds{quantile="0.99"} > 0.1
            for: 2m
            labels:
              severity: warning
            annotations:
              summary: "Milvus high query latency"
              description: "99th percentile query latency is {{ $value }}s"

          # Insert rate alert
          - alert: MilvusLowInsertRate
            expr: rate(milvus_insert_requests_total[5m]) < 1000
            for: 5m
            labels:
              severity: warning
            annotations:
              summary: "Milvus low insert rate"
              description: "Insert rate is {{ $value }} requests/second"

          # Search QPS alert
          - alert: MilvusLowSearchQPS
            expr: rate(milvus_search_requests_total[5m]) < 100
            for: 5m
            labels:
              severity: warning
            annotations:
              summary: "Milvus low search QPS"
              description: "Search QPS is {{ $value }} requests/second"

          # Pod restart alert
          - alert: MilvusPodRestart
            expr: increase(kube_pod_container_status_restarts_total{container=~"milvus.*"}[5m]) > 0
            labels:
              severity: critical
            annotations:
              summary: "Milvus pod restart"
              description: "{{ $labels.pod }} has restarted {{ $value }} times in the last 5 minutes"

      - name: storage
        rules:
          # MinIO high usage alert
          - alert: MinIOHighUsage
            expr: minio_bucket_usage_object_total / minio_bucket_usage_object_total > 0.85
            for: 5m
            labels:
              severity: warning
            annotations:
              summary: "MinIO high usage"
              description: "MinIO bucket usage is {{ $value | humanizePercentage }}"

          # etcd high usage alert
          - alert: EtcdHighUsage
            expr: etcd_server_quota_backend_bytes / etcd_server_quota_backend_bytes > 0.8
            for: 5m
            labels:
              severity: warning
            annotations:
              summary: "etcd high usage"
              description: "etcd backend usage is {{ $value | humanizePercentage }}" 