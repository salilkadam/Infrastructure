apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: dcgm-exporter
  namespace: monitoring
  labels:
    app.kubernetes.io/name: dcgm-exporter
    app.kubernetes.io/part-of: infrastructure
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: dcgm-exporter
  template:
    metadata:
      labels:
        app.kubernetes.io/name: dcgm-exporter
        app.kubernetes.io/part-of: infrastructure
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9400"
        prometheus.io/path: "/metrics"
    spec:
      nodeSelector:
        nvidia.com/gpu.present: "true"
      imagePullSecrets:
      - name: nvcr-secret
      tolerations:
      - key: nvidia.com/gpu
        operator: Exists
        effect: NoSchedule
      containers:
      - name: dcgm-exporter
        image: nvcr.io/nvidia/k8s/dcgm-exporter:3.3.8-3.4.0-ubuntu22.04
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9400
          name: metrics
        env:
        - name: DCGM_EXPORTER_LISTEN
          value: ":9400"
        - name: DCGM_EXPORTER_COLLECTORS
          value: "/etc/dcgm-exporter/default-counters.csv"
        volumeMounts:
        - name: pod-metrics
          mountPath: /var/lib/kubelet/pod-resources
          readOnly: true
        - name: dev
          mountPath: /dev
          readOnly: true
      volumes:
      - name: pod-metrics
        hostPath:
          path: /var/lib/kubelet/pod-resources
          type: Directory
      - name: dev
        hostPath:
          path: /dev
          type: Directory
---
apiVersion: v1
kind: Service
metadata:
  name: dcgm-exporter
  namespace: monitoring
  labels:
    app.kubernetes.io/name: dcgm-exporter
    app.kubernetes.io/part-of: infrastructure
spec:
  selector:
    app.kubernetes.io/name: dcgm-exporter
  ports:
  - name: metrics
    port: 9400
    targetPort: 9400

