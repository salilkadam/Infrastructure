apiVersion: apps/v1
kind: Deployment
metadata:
  name: pgadmin
  namespace: postgres
  labels:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/component: admin
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: postgresql
      app.kubernetes.io/component: admin
  template:
    metadata:
      labels:
        app.kubernetes.io/name: postgresql
        app.kubernetes.io/component: admin
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                - ubuntu
      containers:
      - name: pgadmin
        image: dpage/pgadmin4:latest
        ports:
        - containerPort: 80
          name: http
        env:
        - name: PGADMIN_DEFAULT_EMAIL
          value: "admin@example.com"
        - name: PGADMIN_DEFAULT_PASSWORD
          value: "admin123"
        - name: PGADMIN_CONFIG_SERVER_MODE
          value: "True"
        - name: PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED
          value: "False"
        - name: PGADMIN_CONFIG_LOGIN_BANNER
          value: "Milvus PostgreSQL Administration"
        - name: PGADMIN_CONFIG_UPGRADE_CHECK_ENABLED
          value: "False"
        - name: PGADMIN_CONFIG_CHECK_SAME_PASSWORD
          value: "False"
        - name: PGADMIN_CONFIG_CONSOLE_LOG_LEVEL
          value: "10"
        - name: PGADMIN_CONFIG_FILE_LOG_LEVEL
          value: "10"
        - name: PGADMIN_CONFIG_DEFAULT_SERVER_GROUP
          value: "Servers"
        - name: PGADMIN_CONFIG_SERVER_GROUPS
          value: "Servers"
        - name: PGADMIN_CONFIG_DEFAULT_SERVER
          value: "postgresql"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /misc/ping
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /misc/ping
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: pgadmin-data
          mountPath: /var/lib/pgadmin
      volumes:
      - name: pgadmin-data
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: pgadmin
  namespace: postgres
  labels:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/component: admin
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    name: http
  selector:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/component: admin 