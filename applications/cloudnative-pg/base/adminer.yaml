apiVersion: apps/v1
kind: Deployment
metadata:
  name: adminer
  namespace: postgres
  labels:
    app.kubernetes.io/name: cloudnative-pg
    app.kubernetes.io/component: admin
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: cloudnative-pg
      app.kubernetes.io/component: admin
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cloudnative-pg
        app.kubernetes.io/component: admin
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                - ubuntu
      containers:
      - name: adminer
        image: adminer:4.8.1
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: ADMINER_DEFAULT_SERVER
          value: "pg-rw"
        - name: ADMINER_DESIGN
          value: "pepa-linha-dark"
        resources:
          requests:
            memory: "32Mi"
            cpu: "10m"
          limits:
            memory: "64Mi"
            cpu: "50m"
        livenessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
---
apiVersion: v1
kind: Service
metadata:
  name: adminer
  namespace: postgres
  labels:
    app.kubernetes.io/name: cloudnative-pg
    app.kubernetes.io/component: admin
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 8080
    protocol: TCP
    name: http
  selector:
    app.kubernetes.io/name: cloudnative-pg
    app.kubernetes.io/component: admin 